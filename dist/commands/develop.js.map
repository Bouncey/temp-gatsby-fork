{"version":3,"sources":["../../src/commands/develop.js"],"names":["url","require","chokidar","express","graphqlHTTP","parsePath","request","rl","webpack","webpackConfig","bootstrap","store","copyStaticDirectory","developHtml","withBasePath","report","launchEditor","formatWebpackMessages","chalk","address","setTimeout","rlInterface","createInterface","input","process","stdin","output","stdout","on","exit","startServer","program","directory","directoryPath","createIndexHtml","catch","err","name","panic","stripIndent","compilerConfig","port","devConfig","resolve","compiler","app","use","log","path","heartbeat","schema","getState","graphiql","get","req","res","query","fileName","lineNumber","end","static","__dirname","noInfo","quiet","publicPath","proxy","config","prefix","proxiedUrl","originalUrl","pipe","next","sendFile","decodeURIComponent","parsedPath","extname","startsWith","status","server","Server","io","socket","join","listener","listen","host","code","watchGlobs","map","watch","to","emit","module","exports","detect","parseInt","Promise","_port","question","answer","length","match","then","c","l","prepareUrls","protocol","formatUrl","hostname","format","pathname","prettyPrintUrl","bold","isUnspecifiedHost","lanUrlForConfig","lanUrlForTerminal","ip","test","undefined","_e","localUrlForTerminal","localUrlForBrowser","printInstructions","appName","urls","useYarn","console","cyan","isFirstCompile","plugin","stats","messages","toJson","isSuccessful","errors","warnings","sitePackageJson","open"],"mappings":"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","file":"develop.js","sourcesContent":["/* @flow */\n\nconst url = require(`url`)\nconst chokidar = require(`chokidar`)\nconst express = require(`express`)\nconst graphqlHTTP = require(`express-graphql`)\nconst parsePath = require(`parse-filepath`)\nconst request = require(`request`)\nconst rl = require(`readline`)\nconst webpack = require(`webpack`)\nconst webpackConfig = require(`../utils/webpack.config`)\nconst bootstrap = require(`../bootstrap`)\nconst { store } = require(`../redux`)\nconst copyStaticDirectory = require(`../utils/copy-static-directory`)\nconst developHtml = require(`./develop-html`)\nconst { withBasePath } = require(`../utils/path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst launchEditor = require(`react-dev-utils/launchEditor`)\nconst formatWebpackMessages = require(`react-dev-utils/formatWebpackMessages`)\nconst chalk = require(`chalk`)\nconst address = require(`address`)\n\n// const isInteractive = process.stdout.isTTY\n\n// Watch the static directory and copy files to public as they're added or\n// changed. Wait 10 seconds so copying doesn't interfer with the regular\n// bootstrap.\nsetTimeout(() => {\n  copyStaticDirectory()\n}, 10000)\n\nconst rlInterface = rl.createInterface({\n  input: process.stdin,\n  output: process.stdout,\n})\n\n// Quit immediately on hearing ctrl-c\nrlInterface.on(`SIGINT`, () => {\n  process.exit()\n})\n\nasync function startServer(program) {\n  const directory = program.directory\n  const directoryPath = withBasePath(directory)\n  const createIndexHtml = () =>\n    developHtml(program).catch(err => {\n      if (err.name !== `WebpackError`) {\n        report.panic(err)\n        return\n      }\n      report.panic(\n        report.stripIndent`\n          There was an error compiling the html.js component for the development server.\n\n          See our docs page on debugging HTML builds for help https://goo.gl/yL9lND\n        `,\n        err\n      )\n    })\n\n  // Start bootstrap process.\n  await bootstrap(program)\n\n  await createIndexHtml()\n\n  const compilerConfig = await webpackConfig(\n    program,\n    directory,\n    `develop`,\n    program.port\n  )\n\n  const devConfig = compilerConfig.resolve()\n  const compiler = webpack(devConfig)\n\n  /**\n   * Set up the express app.\n   **/\n  const app = express()\n  app.use(\n    require(`webpack-hot-middleware`)(compiler, {\n      log: () => {},\n      path: `/__webpack_hmr`,\n      heartbeat: 10 * 1000,\n    })\n  )\n  app.use(\n    `/___graphql`,\n    graphqlHTTP({\n      schema: store.getState().schema,\n      graphiql: true,\n    })\n  )\n  app.get(`/__open-stack-frame-in-editor`, (req, res) => {\n    launchEditor(req.query.fileName, req.query.lineNumber)\n    res.end()\n  })\n\n  app.use(express.static(__dirname + `/public`))\n\n  app.use(\n    require(`webpack-dev-middleware`)(compiler, {\n      noInfo: true,\n      quiet: true,\n      publicPath: devConfig.output.publicPath,\n    })\n  )\n\n  // Set up API proxy.\n  const { proxy } = store.getState().config\n  if (proxy) {\n    const { prefix, url } = proxy\n    app.use(`${prefix}/*`, (req, res) => {\n      const proxiedUrl = url + req.originalUrl\n      req.pipe(request(proxiedUrl)).pipe(res)\n    })\n  }\n\n  // Check if the file exists in the public folder.\n  app.get(`*`, (req, res, next) => {\n    // Load file but ignore errors.\n    res.sendFile(\n      directoryPath(`/public${decodeURIComponent(req.path)}`),\n      err => {\n        // No err so a file was sent successfully.\n        if (!err || !err.path) {\n          next()\n        } else if (err) {\n          // There was an error. Let's check if the error was because it\n          // couldn't find an HTML file. We ignore these as we want to serve\n          // all HTML from our single empty SSR html file.\n          const parsedPath = parsePath(err.path)\n          if (\n            parsedPath.extname === `` ||\n            parsedPath.extname.startsWith(`.html`)\n          ) {\n            next()\n          } else {\n            res.status(404).end()\n          }\n        }\n      }\n    )\n  })\n\n  // Render an HTML page and serve it.\n  app.use((req, res, next) => {\n    const parsedPath = parsePath(req.originalUrl)\n    if (parsedPath.extname === `` || parsedPath.extname.startsWith(`.html`)) {\n      res.sendFile(directoryPath(`public/index.html`), err => {\n        if (err) {\n          res.status(500).end()\n        }\n      })\n    } else {\n      next()\n    }\n  })\n\n  /**\n   * Set up the HTTP server and socket.io.\n   **/\n\n  const server = require(`http`).Server(app)\n  const io = require(`socket.io`)(server)\n\n  io.on(`connection`, socket => {\n    socket.join(`clients`)\n  })\n\n  const listener = server.listen(program.port, program.host, err => {\n    if (err) {\n      if (err.code === `EADDRINUSE`) {\n        // eslint-disable-next-line max-len\n        report.panic(\n          `Unable to start Gatsby on port ${\n            program.port\n          } as there's already a process listing on that port.`\n        )\n        return\n      }\n\n      report.panic(`There was a problem starting the development server`, err)\n    }\n  })\n\n  // Register watcher that rebuilds index.html every time html.js changes.\n  const watchGlobs = [`src/html.js`, `plugins/**/gatsby-ssr.js`].map(path =>\n    directoryPath(path)\n  )\n\n  chokidar.watch(watchGlobs).on(`change`, async () => {\n    await createIndexHtml()\n    io.to(`clients`).emit(`reload`)\n  })\n\n  return [compiler, listener]\n}\n\nmodule.exports = async (program: any) => {\n  const detect = require(`detect-port`)\n  const port =\n    typeof program.port === `string` ? parseInt(program.port, 10) : program.port\n\n  let compiler\n  let listener\n  await new Promise(resolve => {\n    detect(port, (err, _port) => {\n      if (err) {\n        report.panic(err)\n      }\n\n      if (port !== _port) {\n        // eslint-disable-next-line max-len\n        const question = `Something is already running at port ${\n          port\n        } \\nWould you like to run the app at another port instead? [Y/n] `\n\n        rlInterface.question(question, answer => {\n          if (answer.length === 0 || answer.match(/^yes|y$/i)) {\n            program.port = _port // eslint-disable-line no-param-reassign\n          }\n\n          startServer(program).then(([c, l]) => {\n            compiler = c\n            listener = l\n            resolve()\n          })\n        })\n      } else {\n        startServer(program).then(([c, l]) => {\n          compiler = c\n          listener = l\n          resolve()\n        })\n      }\n    })\n  })\n\n  function prepareUrls(protocol, host, port) {\n    const formatUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port,\n        pathname: `/`,\n      })\n    const prettyPrintUrl = hostname =>\n      url.format({\n        protocol,\n        hostname,\n        port: chalk.bold(port),\n        pathname: `/`,\n      })\n\n    const isUnspecifiedHost = host === `0.0.0.0` || host === `::`\n    let lanUrlForConfig, lanUrlForTerminal\n    if (isUnspecifiedHost) {\n      try {\n        // This can only return an IPv4 address\n        lanUrlForConfig = address.ip()\n        if (lanUrlForConfig) {\n          // Check if the address is a private ip\n          // https://en.wikipedia.org/wiki/Private_network#Private_IPv4_address_spaces\n          if (\n            /^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(\n              lanUrlForConfig\n            )\n          ) {\n            // Address is private, format it for later use\n            lanUrlForTerminal = prettyPrintUrl(lanUrlForConfig)\n          } else {\n            // Address is not private, so we will discard it\n            lanUrlForConfig = undefined\n          }\n        }\n      } catch (_e) {\n        // ignored\n      }\n    }\n    // TODO collect errors (GraphQL + Webpack) in Redux so we\n    // can clear terminal and print them out on every compile.\n    // Borrow pretty printing code from webpack plugin.\n    const localUrlForTerminal = prettyPrintUrl(host)\n    const localUrlForBrowser = formatUrl(host)\n    return {\n      lanUrlForConfig,\n      lanUrlForTerminal,\n      localUrlForTerminal,\n      localUrlForBrowser,\n    }\n  }\n\n  function printInstructions(appName, urls, useYarn) {\n    console.log()\n    console.log(`You can now view ${chalk.bold(appName)} in the browser.`)\n    console.log()\n\n    if (urls.lanUrlForTerminal) {\n      console.log(\n        `  ${chalk.bold(`Local:`)}            ${urls.localUrlForTerminal}`\n      )\n      console.log(\n        `  ${chalk.bold(`On Your Network:`)}  ${urls.lanUrlForTerminal}`\n      )\n    } else {\n      console.log(`  ${urls.localUrlForTerminal}`)\n    }\n\n    console.log()\n    console.log(`Note that the development build is not optimized.`)\n    console.log(\n      `To create a production build, use ` + `${chalk.cyan(`gatsby build`)}`\n    )\n    console.log()\n  }\n\n  let isFirstCompile = true\n  // \"done\" event fires when Webpack has finished recompiling the bundle.\n  // Whether or not you have warnings or errors, you will get this event.\n  compiler.plugin(`done`, stats => {\n    // We have switched off the default Webpack output in WebpackDevServer\n    // options so we are going to \"massage\" the warnings and errors and present\n    // them in a readable focused way.\n    const messages = formatWebpackMessages(stats.toJson({}, true))\n    const urls = prepareUrls(`http`, program.host, program.port)\n    const isSuccessful = !messages.errors.length && !messages.warnings.length\n    // if (isSuccessful) {\n    // console.log(chalk.green(`Compiled successfully!`))\n    // }\n    // if (isSuccessful && (isInteractive || isFirstCompile)) {\n    if (isSuccessful && isFirstCompile) {\n      printInstructions(program.sitePackageJson.name, urls, program.useYarn)\n    }\n\n    if (program.open) {\n      require(`opn`)(urls.localUrlForBrowser)\n    }\n\n    isFirstCompile = false\n\n    // If errors exist, only show errors.\n    // if (messages.errors.length) {\n    // // Only keep the first error. Others are often indicative\n    // // of the same problem, but confuse the reader with noise.\n    // if (messages.errors.length > 1) {\n    // messages.errors.length = 1\n    // }\n    // console.log(chalk.red(\"Failed to compile.\\n\"))\n    // console.log(messages.errors.join(\"\\n\\n\"))\n    // return\n    // }\n\n    // Show warnings if no errors were found.\n    // if (messages.warnings.length) {\n    // console.log(chalk.yellow(\"Compiled with warnings.\\n\"))\n    // console.log(messages.warnings.join(\"\\n\\n\"))\n\n    // // Teach some ESLint tricks.\n    // console.log(\n    // \"\\nSearch for the \" +\n    // chalk.underline(chalk.yellow(\"keywords\")) +\n    // \" to learn more about each warning.\"\n    // )\n    // console.log(\n    // \"To ignore, add \" +\n    // chalk.cyan(\"// eslint-disable-next-line\") +\n    // \" to the line before.\\n\"\n    // )\n    // }\n  })\n}\n"]}